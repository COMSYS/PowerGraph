''' This file only contains code necessary to render the logo vector image '''


vdata = """
u
*u
0.176 0.114 0.000 0.086 k
92.1 10.6 m
92.1 10.9 92.0 11.3 91.8 11.6 C
91.7 11.9 91.3 12.2 90.9 12.4 C
90.5 12.6 89.9 12.7 89.2 12.7 C
88.8 12.7 88.3 12.7 88.0 12.6 C
87.7 12.4 87.4 12.4 87.2 12.3 C
86.8 12.1 L
86.8 16.3 L
84.3 16.3 L
84.3 3.6 L
86.8 3.6 L
86.8 10.6 L
86.8 10.7 86.9 10.7 87.0 10.9 C
87.2 11.0 87.4 11.2 87.7 11.3 C
87.9 11.4 88.2 11.5 88.5 11.5 C
89.2 11.5 89.6 11.4 89.8 11.2 C
90.1 11.0 90.2 10.7 90.2 10.1 C
90.2 3.6 L
92.1 3.6 L
92.1 10.6 L
f
*U
*u
0.176 0.114 0.000 0.086 k
82.8 11.2 m
82.5 11.9 82.0 12.3 81.5 12.4 C
81.0 12.6 80.4 12.7 79.8 12.7 C
79.4 12.7 79.1 12.6 78.8 12.5 C
78.5 12.4 78.2 12.3 78.0 12.2 C
77.7 12.0 L
77.7 12.7 L
75.2 12.7 L
75.2 0.0 L
77.7 0.0 L
77.7 4.0 L
78.3 3.7 79.0 3.5 80.0 3.5 C
80.7 3.6 81.3 3.7 81.7 3.9 C
82.2 4.1 82.6 4.5 82.9 5.3 C
83.3 5.9 83.4 6.9 83.5 8.2 C
83.5 9.6 83.3 10.6 82.8 11.2 C
f
81.3 10.1 m
81.4 9.6 81.5 8.9 81.5 8.2 C
81.4 7.0 81.3 6.2 81.0 5.6 C
80.7 5.0 80.1 4.8 79.3 4.8 C
78.8 4.8 78.4 4.8 78.2 5.0 C
77.9 5.1 77.8 5.2 77.7 5.3 C
77.7 10.7 L
77.7 10.8 77.8 10.9 78.1 11.1 C
78.4 11.3 78.8 11.4 79.2 11.4 C
79.8 11.4 80.2 11.4 80.5 11.2 C
80.9 10.9 81.1 10.6 81.3 10.1 C
f
*U
*u
0.176 0.114 0.000 0.086 k
71.2 9.4 m
70.8 9.2 70.4 9.1 69.8 9.0 C
68.5 8.9 67.5 8.6 66.8 8.2 C
66.2 7.7 65.9 7.0 65.9 6.1 C
65.9 5.3 66.2 4.7 66.8 4.3 C
67.3 3.9 68.0 3.6 68.8 3.6 C
69.8 3.6 70.5 3.8 70.8 4.0 C
71.3 4.3 71.5 4.5 71.5 4.6 C
71.5 3.6 L
74.1 3.6 L
74.1 10.1 L
74.1 10.9 73.8 11.5 73.2 11.9 C
72.5 12.4 71.5 12.7 70.2 12.7 C
69.5 12.7 68.8 12.6 68.4 12.4 C
67.9 12.3 67.5 12.2 67.2 12.0 C
66.8 11.8 L
66.5 9.9 L
66.6 10.2 67.0 10.6 67.6 10.9 C
68.2 11.3 69.0 11.5 70.0 11.5 C
70.5 11.5 70.9 11.4 71.2 11.2 C
71.5 10.9 71.7 10.7 71.7 10.3 C
71.7 9.9 71.5 9.7 71.2 9.4 C
f
71.0 7.7 m
71.3 7.8 71.4 7.9 71.5 8.0 C
71.5 8.1 71.5 8.2 71.5 8.2 C
71.5 6.2 L
71.5 5.7 71.2 5.3 70.3 5.0 C
70.0 5.0 69.7 4.9 69.5 4.9 C
68.5 4.9 68.0 5.2 68.0 5.8 C
68.0 6.4 68.2 6.8 68.5 7.0 C
68.9 7.2 69.5 7.3 70.2 7.5 C
70.5 7.5 70.8 7.5 71.0 7.7 C
f
*U
*u
0.176 0.114 0.000 0.086 k
63.1 12.4 m
62.8 12.3 62.5 12.2 62.4 12.1 C
62.2 11.9 62.0 11.9 62.0 11.7 C
61.8 11.6 L
61.8 12.7 L
59.3 12.7 L
59.3 3.6 L
61.8 3.6 L
61.8 9.2 L
61.8 9.5 61.9 9.8 62.1 10.2 C
62.4 10.6 62.7 10.9 63.1 11.1 C
63.5 11.4 64.0 11.4 64.6 11.4 C
64.8 11.4 65.2 11.4 65.5 11.3 C
65.3 12.6 L
65.2 12.7 64.9 12.7 64.5 12.7 C
64.0 12.7 63.5 12.6 63.1 12.4 C
f
*U
*u
0.176 0.114 0.000 0.086 k
57.3 15.8 m
57.3 15.8 56.8 15.9 56.0 16.1 C
55.1 16.2 54.0 16.3 52.9 16.3 C
51.6 16.3 50.6 16.0 49.9 15.6 C
49.1 15.1 48.5 14.4 48.1 13.6 C
47.8 12.7 47.6 11.6 47.6 10.3 C
47.6 8.8 47.8 7.5 48.1 6.5 C
48.5 5.5 49.0 4.8 49.8 4.3 C
50.6 3.9 51.7 3.6 53.1 3.5 C
54.1 3.5 55.0 3.6 55.8 3.8 C
56.5 4.0 57.1 4.1 57.5 4.3 C
57.8 4.5 58.0 4.6 58.0 4.7 C
58.0 9.2 L
55.2 9.2 L
55.2 5.7 L
55.1 5.6 54.9 5.5 54.5 5.3 C
54.1 5.2 53.6 5.2 52.9 5.2 C
52.2 5.2 51.8 5.5 51.5 6.0 C
51.1 6.5 51.0 7.1 50.9 7.8 C
50.8 8.6 50.8 9.3 50.8 10.3 C
50.8 13.1 51.6 14.5 53.4 14.6 C
53.6 14.7 53.9 14.7 54.3 14.7 C
55.0 14.7 55.6 14.6 56.1 14.4 C
56.6 14.3 57.0 14.1 57.4 13.9 C
57.8 13.7 L
57.3 15.8 L
f
*U
*u
0.176 0.114 0.000 0.086 k
47.0 11.3 m
46.7 12.6 L
46.6 12.7 46.4 12.7 46.0 12.7 C
45.4 12.7 45.0 12.6 44.6 12.4 C
44.3 12.3 44.0 12.2 43.9 12.1 C
43.6 11.9 43.5 11.9 43.4 11.7 C
43.3 11.6 L
43.3 12.7 L
40.7 12.7 L
40.7 3.6 L
43.3 3.6 L
43.3 9.2 L
43.3 9.5 43.4 9.8 43.6 10.2 C
43.9 10.6 44.1 10.9 44.6 11.1 C
45.0 11.4 45.5 11.4 46.0 11.4 C
46.3 11.4 46.6 11.4 47.0 11.3 C
f
*U
*u
0.176 0.114 0.000 0.086 k
32.9 4.7 m
33.5 4.0 34.4 3.6 35.7 3.5 C
35.9 3.5 36.1 3.5 36.5 3.5 C
37.3 3.5 38.0 3.6 38.5 3.8 C
39.0 3.9 39.3 4.0 39.3 4.2 C
39.6 5.7 L
39.5 5.5 39.1 5.3 38.6 5.1 C
38.1 4.8 37.4 4.8 36.5 4.8 C
35.7 4.8 35.1 5.2 34.9 5.9 C
34.6 6.7 34.5 7.3 34.4 7.7 C
39.9 7.7 L
40.0 7.8 40.0 7.9 40.0 8.1 C
40.0 8.2 40.0 8.3 40.0 8.6 C
40.0 9.8 39.7 10.7 39.3 11.4 C
38.7 12.3 37.6 12.7 36.0 12.7 C
34.6 12.7 33.6 12.3 33.0 11.5 C
32.3 10.8 31.9 9.5 31.9 7.8 C
31.9 6.4 32.2 5.3 32.9 4.7 C
f
34.4 8.9 m
34.4 10.7 35.0 11.5 36.3 11.6 C
37.6 11.6 38.3 10.7 38.3 8.9 C
34.4 8.9 L
f
*U
*u
0.176 0.114 0.000 0.086 k
30.1 12.6 m
28.7 8.8 L
27.1 12.6 L
24.4 12.6 L
24.7 11.8 L
23.4 8.7 L
22.0 12.6 L
19.4 12.6 L
22.9 3.4 L
25.6 10.2 L
28.6 3.4 L
31.6 12.6 L
30.1 12.6 L
f
*U
*u
0.176 0.114 0.000 0.086 k
14.8 12.7 m
11.9 12.7 10.6 11.2 10.5 8.2 C
10.5 6.5 10.9 5.4 11.5 4.7 C
12.2 3.9 13.3 3.5 14.8 3.5 C
16.3 3.5 17.4 3.9 18.1 4.7 C
18.7 5.4 19.1 6.5 19.1 8.2 C
19.1 9.2 18.9 10.1 18.6 10.7 C
18.4 11.4 17.9 11.9 17.3 12.2 C
16.6 12.6 15.9 12.7 14.8 12.7 C
f
13.4 10.6 m
13.6 11.2 14.1 11.4 14.8 11.4 C
15.6 11.4 16.1 11.2 16.3 10.6 C
16.4 9.9 16.6 9.2 16.6 8.1 C
16.6 7.0 16.4 6.2 16.3 5.7 C
16.1 5.1 15.6 4.8 14.8 4.8 C
14.3 4.8 13.9 5.0 13.6 5.3 C
13.4 5.6 13.2 6.0 13.2 6.4 C
13.1 6.8 13.1 7.4 13.0 8.2 C
13.0 9.2 13.1 10.0 13.4 10.6 C
f
*U
*u
0.176 0.114 0.000 0.086 k
9.4 10.2 m
9.8 10.8 10.1 11.6 10.1 12.6 C
10.0 13.9 9.7 14.9 8.9 15.4 C
8.2 16.0 7.2 16.3 5.8 16.3 C
0.0 16.3 L
0.0 3.6 L
2.9 3.6 L
2.9 8.8 L
5.5 8.8 L
6.3 8.8 7.2 8.9 7.8 9.1 C
8.4 9.3 9.0 9.7 9.4 10.2 C
f
6.8 14.2 m
7.2 13.8 7.3 13.3 7.3 12.7 C
7.3 11.8 7.2 11.2 6.8 10.9 C
6.5 10.5 6.0 10.4 5.4 10.4 C
2.9 10.4 L
2.9 14.7 L
5.5 14.7 L
6.0 14.7 6.5 14.5 6.8 14.2 C
f
*U
"""


def render(tkinter_canvas):
	canvas_width  = tkinter_canvas.width
	canvas_height = tkinter_canvas.height
	def draw_PowerGraph(offset, color, scale):
		path = []

		def point_from(r, i):
			return (float(r[i])*scale+offset[0], -float(r[i+1])*scale+offset[1])

		def blend(p1, p2, a):
			return (p1[0]*(1-a) + p2[0]*a, p1[1]*(1-a) + p2[1]*a)

		for line in vdata.split('\x0A'):
			r = line.split(' ')
			cmd = r[-1]
			if cmd == 'm':
				path.append(point_from(r, 0))
			if cmd == 'L':
				path.append(point_from(r, 0))
			if cmd == 'C':
				# interpolate bezier curve
				for i in range(9):
					a = path[-1]
					b = point_from(r, 0)
					c = point_from(r, 2)
					d = point_from(r, 4)
					ab = blend(a, b, i/8)
					bc = blend(b, c, i/8)
					cd = blend(c, d, i/8)
					abc = blend(ab, bc, i/8)
					bcd = blend(bc, cd, i/8)
					abcd = blend(abc, bcd, i/8)
					path.append(abcd)
			if cmd == '*U':
				tkinter_canvas.create_polygon(path, fill=color, width=1)
				path = []

	draw_PowerGraph((0,  canvas_height + 50), '#F0F8FF', 16)
	draw_PowerGraph((50, canvas_height +  0), '#8BF', 8)
	draw_PowerGraph((55, canvas_height +  5), '#DEF', 8)

	


